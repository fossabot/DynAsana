<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Asana</name>
    </assembly>
    <members>
        <member name="T:Asana.User">
            <summary>
            The below classes represent Asana entities.
            </summary>
        </member>
        <member name="M:Asana.Helpers.Classes.CheckFieldValue(System.String)">
            <summary>
            Checks whether a field is a valid string
            </summary>
            <param name="value">The value to check</param>
            <returns>True if the value is not null or emptym false otherwise.</returns>
        </member>
        <member name="M:Asana.Helpers.Classes.CheckId(System.String)">
            <summary>
            Check if the supplied Id is valid. Note: does not guarantee Id is valid, only checks general format.
            </summary>
            <param name="Id">The id to check</param>
            <returns>True if Id seems valid, false otherwise.</returns>
        </member>
        <member name="T:Asana.Helpers.Web">
            <summary>
            Utility functions that are used for validation and other auxiliary tasks
            </summary>
        </member>
        <member name="M:Asana.Helpers.Web.CheckURI(System.Uri)">
            <summary>Check the URI is valid</summary>
            <param name="uriToCheck">The URI to check</param>
            <returns>True if is valid, False otherwise</returns>
        </member>
        <member name="T:Asana.Client">
            <summary>
            Asana clients represent a single connection to an Asana organisation, with all associated properties and methods.
            </summary>
        </member>
        <member name="M:Asana.Client.GetTask(System.String)">
            <summary>
            Get a specific Asana task.
            </summary>
            <param name="taskId">The ID of the task to retrieve.</param>
            <returns>The requested Asana task.</returns>
        </member>
        <member name="M:Asana.Client.GetWorkspaceTasks(System.String)">
            <summary>
            Gets all tasks in a specific workspace.
            </summary>
            <param name="workspaceId">The workspace whose tasks to retrieve.</param>
            <returns>A list of all the tasks in the supplied workspace.</returns>
        </member>
        <member name="M:Asana.Client.GetCurrentUser">
            <summary>
            Get the details for the current Asana user, usually the owner of the token used.
            </summary>
            <returns>The Asana current user.</returns>
        </member>
        <member name="M:Asana.Client.GetUser(System.String)">
            <summary>
            Get the details of a specific Asana user.
            </summary>
            <param name="userId">The identifying user id.</param>
            <returns>The requested Asana user.</returns>
        </member>
        <member name="M:Asana.Client.CreateTask(Asana.Task)">
            <summary>
            Create an Asana task by uploading an Asana Task object.
            </summary>
            <param name="task">The task to upload.</param>
            <returns>The createad task.</returns>
        </member>
        <member name="M:Asana.Client.GetValidProperties(System.Object)">
            <summary>
            Gets only non-null properties from a Type. Also respects the [SkipProperty] attribute.
            </summary>
            <param name="obj">The object to extract type properties from.</param>
            <returns>A dictionary of properties and their values.</returns>
        </member>
        <member name="M:Asana.Client.GetValidPropertiesJSON(System.Object)">
            <summary>
            Gets JSON encoded non-null properties from a Type. Also respects the [SkipProperty] attribute.
            </summary>
            <param name="obj">The object to extract type properties from.</param>
            <returns>A dictionary of properties and their values.</returns>
        </member>
        <member name="M:Asana.Client.#ctor(System.String)">
            <summary>
            Asana client constructor
            </summary>
            <param name="token">OAuth token, must be valid.</param>
        </member>
        <member name="M:Asana.Client.TestConnection">
            <summary>
            Test the connection to Asana by querying the API for the current user's data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asana.Client.CheckToken(System.String)">
            <summary>
            Checks whether an OAuth token is valid
            </summary>
            <param name="token">The token to check</param>
            <returns>True if token is valid and false otherwise</returns>
        </member>
        <member name="T:Asana.AsanaRequest">
            <summary>
            Represents any request to the Asana API. Inherits from the RestSharp RestRequest class.
            </summary>
        </member>
        <member name="M:Asana.AsanaRequest.Execute``1(Asana.Client)">
            <summary>
            Executes an Asana Request
            </summary>
            <typeparam name="T">The Asana object type to deserialize as.</typeparam>
            <param name="request">The Asana Request to execute.</param>
            <returns>Response from Asana API deserialized as the supplied type.</returns>
        </member>
        <member name="M:Asana.AsanaRequest.Deserialize``1(RestSharp.IRestResponse,System.String)">
            <summary>
            Deserializes a response from the Asana API to the supplied object type.
            </summary>
            <typeparam name="T">The type to deserialize to.</typeparam>
            <param name="response">The response from Asana API to deserialize.</param>
            <param name="JsonToken">Optional : specify a JSON token as the root element to deserialise from.
            Default for Asana is : "$.data"</param>
            <returns>The supplied response from Asana API, deserialized as the supplied type.</returns>
        </member>
        <member name="T:Asana.Error">
            <summary>
            Individual error message from Asana API.
            </summary>
        </member>
        <member name="T:Asana.AsanaResponse">
            <summary>
            Response from the Asana API.
            </summary>
        </member>
        <member name="T:Asana.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Asana.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Asana.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Asana.Properties.Resources.add_to_slack">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Asana.Properties.Resources.slack">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Asana.Task">
            <summary>
            Class represents an Asana task.
            See API structure at https://asana.com/developers/api-reference/tasks
            </summary>
        </member>
        <member name="M:Asana.Task.#ctor(System.String,System.String)">
            <summary>
            Create an Asana task
            </summary>
            <param name="name">The name of the task.</param>
            <param name="description">The description of the task.</param>
        </member>
        <member name="M:Asana.Task.#ctor">
            <summary>
            Parameterless Task constructor
            </summary>
        </member>
        <member name="M:Asana.Task.ToJSON">
            <summary>
            Serializes the Slack message to JSON
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
