<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Asana</name>
    </assembly>
    <members>
        <member name="T:Asana.Classes.Tag">
            <summary>
            Class represents an Asana tag.
            See API structure at https://asana.com/developers/api-reference/tags
            </summary>
        </member>
        <member name="T:Asana.Classes.CustomFieldValue">
            <summary>
            Class represents the value of an Asana CustomField.
            See API structure at https://asana.com/developers/api-reference/custom_fields
            </summary>
        </member>
        <member name="T:Asana.Classes.CustomField">
            <summary>
            Class represents an Asana CustomField.
            See API structure at https://asana.com/developers/api-reference/custom_fields
            </summary>
        </member>
        <member name="T:Asana.Classes.Workspace">
            <summary>
            Class represents an Asana workspace.
            See API structure at https://asana.com/developers/api-reference/workspaces
            </summary>
        </member>
        <member name="T:Asana.Classes.Project">
            <summary>
            Class represents an Asana project.
            See API structure at https://asana.com/developers/api-reference/projects
            </summary>
        </member>
        <member name="T:Asana.Classes.Section">
            <summary>
            Class represents an Asana section.
            See API structure at https://asana.com/developers/api-reference/sections
            </summary>
        </member>
        <member name="T:Asana.Classes.Membership">
            <summary>
            Class represents an Asana membership.
            See API structure at https://asana.com/developers/api-reference/sections
            </summary>
        </member>
        <member name="T:Asana.Classes.User">
            <summary>
            Class represents an Asana user.
            See API structure at https://asana.com/developers/api-reference/users
            </summary>
        </member>
        <member name="T:Asana.Classes.Heart">
            <summary>
            Class represents an Asana heart.
            See API structure at https://asana.com/developers/api-reference/stories
            </summary>
        </member>
        <member name="T:Asana.Classes.Task">
            <summary>
            Class represents an Asana task.
            See API structure at https://asana.com/developers/api-reference/tasks
            </summary>
        </member>
        <member name="M:Asana.Classes.Task.#ctor(System.String,System.String,Asana.Classes.Workspace)">
            <summary>
            Create an Asana task
            </summary>
            <param name="name">The name of the task.</param>
            <param name="description">The description of the task.</param>
        </member>
        <member name="M:Asana.Classes.Task.#ctor(System.String,System.String,Asana.Classes.Workspace,Asana.Classes.User,System.Collections.Generic.List{Asana.Classes.Project},System.Collections.Generic.List{Asana.Classes.Tag})">
            <summary>
            Create an Asana task by specifying basic properties.
            </summary>
            <param name="name">The name of the task.</param>
            <param name="description">The description of the task. Relates to "notes" field in API.</param>
            <param name="workspace">The workspace to create Task in.</param>
            <param name="assignee">The user to assign the task to.</param>
            <param name="projects">The projects this task will be part of. Projects must be in same workspace as specified workspace.</param>
            <param name="tags">The tags to use on the task.</param>
        </member>
        <member name="M:Asana.Classes.Task.#ctor">
            <summary>
            Parameterless Task constructor
            </summary>
        </member>
        <member name="M:Asana.Classes.Task.ToJSON">
            <summary>
            Serializes the Slack message to JSON
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asana.Helpers.Classes.CheckFieldValue(System.String)">
            <summary>
            Checks whether a field is a valid string
            </summary>
            <param name="value">The value to check</param>
            <returns>True if the value is not null/empty, false otherwise.</returns>
        </member>
        <member name="M:Asana.Helpers.Classes.CheckId(System.String)">
            <summary>
            Check if the supplied Id is valid. Note: does not guarantee Id is valid, only checks general format.
            </summary>
            <param name="Id">The id to check</param>
            <returns>True if Id seems valid, false otherwise.</returns>
        </member>
        <member name="T:Asana.Helpers.Web">
            <summary>
            Utility functions that are used for validation and other auxiliary tasks
            </summary>
        </member>
        <member name="M:Asana.Helpers.Web.CheckURI(System.Uri)">
            <summary>Check the URI is valid</summary>
            <param name="uriToCheck">The URI to check</param>
            <returns>True if is valid, False otherwise</returns>
        </member>
        <member name="T:Asana.Client">
            <summary>
            Asana clients represent a single connection to an Asana organisation, with all associated properties and methods.
            </summary>
        </member>
        <member name="M:Asana.Client.GetWorkspaceById(System.String)">
            <summary>
            Get a specific Asana workspace.
            </summary>
            <param name="workspaceId">The ID of the workspace to retrieve.</param>
            <returns>Returns the complete workspace record for a single workspace.</returns>
        </member>
        <member name="M:Asana.Client.GetWorkspaces">
            <summary>
            Get all workspaces available to user.
            </summary>
            <returns>Returns the compact records for all workspaces visible to the authorized user.</returns>
        </member>
        <member name="M:Asana.Client.GetProjectById(System.String)">
            <summary>
            Get a specific Asana project.
            </summary>
            <param name="projectId">The ID of the project to retrieve.</param>
            <returns>Returns the complete task record for a single project.</returns>
        </member>
        <member name="M:Asana.Client.GetProjectsByWorkspace(System.String)">
            <summary>
            Get all projects in a specific workspace.
            </summary>
            <param name="workspaceId">The id of the workspace whose projects to retrieve.</param>
            <returns>Returns the compact project records for all projects in the workspace.</returns>
        </member>
        <member name="M:Asana.Client.GetProjectsByTeam(System.String)">
            <summary>
            Get all projects in a specific workspace.
            </summary>
            <param name="teamId">The id of the team whose projects to retrieve.</param>
            <returns>Returns the compact project records for all projects in the team.</returns>
        </member>
        <member name="M:Asana.Client.GetProjectsByTask(System.String)">
            <summary>
            Get all projects the specified task if part of.
            </summary>
            <param name="tagId">The Id of the task whose projects to retrieve.</param>
            <returns>Returns a compact representation of all of the projects the task is in.</returns>
        </member>
        <member name="M:Asana.Client.GetProjects">
            <summary>
            Get all projects.
            </summary>
            <returns>Returns the compact project records for some filtered set of projects. Use one or more request parameters to filter the projects returned.</returns>
        </member>
        <member name="M:Asana.Client.GetTaskById(System.String)">
            <summary>
            Get a specific Asana task.
            </summary>
            <param name="taskId">The ID of the task to retrieve.</param>
            <returns>Returns the complete task record for a single task.</returns>
        </member>
        <member name="M:Asana.Client.GetTasksByWorkspace(System.String)">
            <summary>
            Get all tasks in a specific workspace.
            </summary>
            <param name="workspaceId">The id of the workspace whose tasks to retrieve.</param>
            <returns>A list of all the tasks in the supplied workspace.</returns>
        </member>
        <member name="M:Asana.Client.GetTasksByProject(System.String)">
            <summary>
            Get all tasks in a specific project.
            </summary>
            <param name="projectId">The id of the project whose tasks to retrieve.</param>
            <returns>Returns the compact task records for all tasks within the given project, ordered by their priority within the project.</returns>
        </member>
        <member name="M:Asana.Client.GetTasksByTag(System.String)">
            <summary>
            Get all tasks with a specific tag.
            </summary>
            <param name="tagId">The Id of the tag whose tasks to retrieve.</param>
            <returns>Returns the compact task records for all tasks with the given tag</returns>
        </member>
        <member name="M:Asana.Client.GetSubtasksByTask(System.String)">
            <summary>
            Get the subtasks of a specific Asana task.
            </summary>
            <param name="taskId">The ID of the task whose subtasks to retrieve.</param>
            <returns>Returns a compact representation of all of the subtasks of a task.</returns>
        </member>
        <member name="M:Asana.Client.GetSectionsByProject(System.String)">
            <summary>
            Get all sections in a specific project.
            </summary>
            <param name="projectId">The id of the project whose sections to retrieve.</param>
            <returns>Returns compact records for all sections in the specified project.</returns>
        </member>
        <member name="M:Asana.Client.GetTasks">
            <summary>
            Get all tasks.
            </summary>
            <returns>Returns the compact task records for some filtered set of tasks. Use one or more request parameters to filter the tasks returned.</returns>
        </member>
        <member name="M:Asana.Client.GetTagById(System.String)">
            <summary>
            Get a specific Asana tag.
            </summary>
            <param name="tagId">The ID of the tag to retrieve.</param>
            <returns>Returns the complete tag record for a single tag.</returns>
        </member>
        <member name="M:Asana.Client.GetTagsByWorkspace(System.String)">
            <summary>
            Get all tags in a specific workspace.
            </summary>
            <param name="workspaceId">The id of the workspace whose tags to retrieve.</param>
            <returns>Returns the compact tag records in the workspace.</returns>
        </member>
        <member name="M:Asana.Client.GetTags">
            <summary>
            Get all tags.
            </summary>
            <returns>Returns the compact tag records for some filtered set of tags. Use one or more request parameters to filter the tags returned.</returns>
        </member>
        <member name="M:Asana.Client.GetUserBySession">
            <summary>
            Get the details for the currently logged in Asana user, usually the owner of the token used.
            </summary>
            <returns>The Asana current user.</returns>
        </member>
        <member name="M:Asana.Client.GetUserById(System.String)">
            <summary>
            Get the details of a specific Asana user.
            </summary>
            <param name="userId">The id of the user to retrieve.</param>
            <returns>The requested Asana user.</returns>
        </member>
        <member name="M:Asana.Client.GetUsersByWorkspace(System.String)">
            <summary>
            Get all users in a specific workspace.
            </summary>
            <param name="workspaceId">The id of the workspace whose users to retrieve.</param>
            <returns>Returns the user records for all users in the specified workspace or organization.</returns>
        </member>
        <member name="M:Asana.Client.GetUsers(System.String)">
            <summary>
            Get all users.
            </summary>
            <param name="workspaceId">(optional) The id of the workspace whose users to retrieve.</param>
            <returns>Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter.</returns>
        </member>
        <member name="M:Asana.Client.CreateTask(Asana.Classes.Task)">
            <summary>
            Create an Asana task by uploading an Asana Task object.
            </summary>
            <param name="task">The task to upload.</param>
            <returns>The createad task.</returns>
        </member>
        <member name="M:Asana.Client.GetValidProperties(System.Object)">
            <summary>
            Gets only non-null properties from a Type. Also respects the [SkipProperty] attribute.
            </summary>
            <param name="obj">The object to extract type properties from.</param>
            <returns>A dictionary of properties and their values.</returns>
        </member>
        <member name="M:Asana.Client.GetValidPropertiesJSON(System.Object)">
            <summary>
            Gets JSON encoded non-null properties from a Type. Also respects the [SkipProperty] attribute.
            </summary>
            <param name="obj">The object to extract type properties from.</param>
            <returns>A dictionary of properties and their values.</returns>
        </member>
        <member name="M:Asana.Client.#ctor(System.String)">
            <summary>
            Asana client constructor
            </summary>
            <param name="token">OAuth token, must be valid.</param>
        </member>
        <member name="M:Asana.Client.TestConnection">
            <summary>
            Test the connection to Asana by querying the API for the current user's data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Asana.Client.CheckToken(System.String)">
            <summary>
            Checks whether an OAuth token is valid
            </summary>
            <param name="token">The token to check</param>
            <returns>True if token is valid and false otherwise</returns>
        </member>
        <member name="T:Asana.AsanaRequest">
            <summary>
            Represents any request to the Asana API. Inherits from the RestSharp RestRequest class.
            </summary>
        </member>
        <member name="M:Asana.AsanaRequest.#ctor(Asana.Client,RestSharp.Method,System.String)">
            <summary>
            Construct an Asana request from a supplied client, web method and resource targeted.
            </summary>
            <param name="client">The Asana client, required for authentication.</param>
            <param name="method">The method to use. Ex : Method.GET, Method.POST, etc.</param>
            <param name="resource">(optional) The URL fragment for the resource targeted. Ex : "tasks/".
            Note : does not require leading slash.</param>
        </member>
        <member name="M:Asana.AsanaRequest.Execute``1(Asana.Client)">
            <summary>
            Executes an Asana Request
            </summary>
            <typeparam name="T">The Asana object type to deserialize as.</typeparam>
            <param name="request">The Asana Request to execute.</param>
            <returns>Response from Asana API deserialized as the supplied type.</returns>
        </member>
        <member name="M:Asana.AsanaRequest.Deserialize``1(RestSharp.IRestResponse,System.String)">
            <summary>
            Deserializes a response from the Asana API to the supplied object type.
            </summary>
            <typeparam name="T">The type to deserialize to.</typeparam>
            <param name="response">The response from Asana API to deserialize.</param>
            <param name="JsonToken">Optional : specify a JSON token as the root element to deserialise from.
            Default for Asana is : "$.data"</param>
            <returns>The supplied response from Asana API, deserialized as the supplied type.</returns>
        </member>
        <member name="T:Asana.AsanaError">
            <summary>
            Individual error message from Asana API.
            </summary>
        </member>
        <member name="T:Asana.AsanaErrorResponse">
            <summary>
            Response from the Asana API detailing the errors that occured.
            </summary>
        </member>
    </members>
</doc>
